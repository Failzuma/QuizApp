// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  user_id       Int       @id @default(autoincrement())
  username      String    @unique
  email         String    @unique
  password_hash String
  created_at    DateTime  @default(now())
  answers       Answer[]
  room_sessions RoomParticipant[]
}

model Map {
  map_identifier String @id @unique
  title          String
  created_at     DateTime @default(now())
  nodes          MapNode[]
  obstacles      MapObstacle[]
}

model MapNode {
  node_id        Int        @id @default(autoincrement())
  map_identifier String
  map            Map        @relation(fields: [map_identifier], references: [map_identifier])
  title          String?
  content        String?
  posX           Float?
  posY           Float?
  questions      Question[]
  created_at     DateTime   @default(now())
}

model MapObstacle {
  obstacle_id    Int      @id @default(autoincrement())
  map_identifier String
  map            Map      @relation(fields: [map_identifier], references: [map_identifier])
  posX           Float
  posY           Float
  width          Float
  height         Float
  created_at     DateTime @default(now())
}

model Question {
  question_id    Int      @id @default(autoincrement())
  node_id        Int
  mapNode        MapNode  @relation(fields: [node_id], references: [node_id])
  question_text  String
  options        Json? // For Multiple Choice, Matching pairs, etc.
  correct_answer String
  created_at     DateTime @default(now())
  answers        Answer[]
}

model Answer {
  answer_id         Int       @id @default(autoincrement())
  user_id           Int
  user              User      @relation(fields: [user_id], references: [user_id])
  question_id       Int
  question          Question  @relation(fields: [question_id], references: [question_id])
  user_answer       String
  is_correct        Boolean
  waktu_pengerjaan  DateTime  @default(now())
  room_id           Int?      // Optional: link to a specific multiplayer room
  room              Room?     @relation(fields: [room_id], references: [room_id])
}

model Room {
  room_id       Int      @id @default(autoincrement())
  map_identifier String
  room_code     String   @unique
  is_active     Boolean  @default(true)
  created_at    DateTime @default(now())
  participants  RoomParticipant[]
  answers       Answer[]
}

model RoomParticipant {
  participant_id Int      @id @default(autoincrement())
  room_id        Int
  room           Room     @relation(fields: [room_id], references: [room_id])
  user_id        Int
  user           User     @relation(fields: [user_id], references: [user_id])
  session_score  Int      @default(0)
  joined_at      DateTime @default(now())
}
