// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  user_id       Int       @id @default(autoincrement())
  username      String    @unique
  email         String    @unique
  password_hash String
  created_at    DateTime  @default(now())
  answers       Answer[]
}

model MapNode {
  node_id        Int        @id @default(autoincrement())
  map_identifier String     // e.g., "english_grammar_1"
  title          String
  content        String
  posX           Float      @default(0)
  posY           Float      @default(0)
  questions      Question[]
  MapObstacle    MapObstacle[] // Relation to obstacles
}

model Question {
  question_id    Int      @id @default(autoincrement())
  node_id        Int
  question_text  String
  correct_answer String
  options        Json?    // e.g., ["Option A", "Option B"]
  mapNode        MapNode  @relation(fields: [node_id], references: [node_id])
  answers        Answer[]
}

model Answer {
  answer_id         Int       @id @default(autoincrement())
  user_id           Int
  question_id       Int
  user_answer       String
  is_correct        Boolean
  waktu_pengerjaan  DateTime  @default(now())
  user              User      @relation(fields: [user_id], references: [user_id])
  question          Question  @relation(fields: [question_id], references: [question_id])
}

model MapObstacle {
  obstacle_id    Int    @id @default(autoincrement())
  map_identifier String
  posX           Float
  posY           Float
  width          Float
  height         Float
  mapNode        MapNode @relation(fields: [map_identifier], references: [map_identifier], onDelete: Cascade, onUpdate: Cascade)

  @@index([map_identifier])
}
